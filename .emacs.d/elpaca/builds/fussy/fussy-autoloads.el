;;; fussy-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:



;;; Generated autoloads from fussy.el

(defvar fussy-adjust-metadata-fn #'fussy--adjust-metadata "\
Used for `completion--adjust-metadata' to adjust completion metadata.

`completion--adjust-metadata' is what is used to set up sorting of candidates
based on `completion-score'.  The default `flex' completion style in
`completion-styles' uses `completion--flex-adjust-metadata' which respects
the original completion table's sort functions:

  e.g. display-sort-function, cycle-sort-function

The default of `fussy-adjust-metadata-fn' is used instead to ignore
existing sort functions in favor of sorting based only on the scoring done by
`fussy-score-fn'.")
(custom-autoload 'fussy-adjust-metadata-fn "fussy" t)
(autoload 'fussy-try-completions "fussy" "\
Try to flex-complete STRING in TABLE given PRED and POINT.

Implement `try-completions' interface by using `completion-flex-try-completion'.

(fn STRING TABLE PRED POINT)")
(autoload 'fussy-all-completions "fussy" "\
Get flex-completions of STRING in TABLE, given PRED and POINT.

Implement `all-completions' interface with additional fuzzy / `flx' scoring.

(fn STRING TABLE PRED POINT)")
(put 'fussy 'completion--adjust-metadata fussy-adjust-metadata-fn)
(add-to-list 'completion-styles-alist '(fussy fussy-try-completions fussy-all-completions "Smart Fuzzy completion with scoring."))
(autoload 'fussy-setup "fussy" "\
Set up `fussy'.")
(autoload 'fussy-eglot-setup "fussy" "\
Set up `fussy' with `eglot'.")
(register-definition-prefixes "fussy" '("fussy-"))

;;; End of scraped data

(provide 'fussy-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; fussy-autoloads.el ends here
